{"files":[{"id":"6b980a3e-38c0-4cbb-9f77-9d3182755739","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Asia/Tokyo\",\n  \"dependencies\": {},\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\",\n  \"webapp\": {\n    \"executeAs\": \"USER_DEPLOYING\",\n    \"access\": \"DOMAIN\"\n  }\n}"},{"id":"894f4c64-59aa-4817-a1ef-bdbd9d33ec92","name":"コード","type":"server_js","source":"// スプレッドシートID\nconst SPREADSHEET_ID \u003d \u00271ubhKY9IC0phGz0U2fKS9J4Be4B5cur_6IsVskSMmd9M\u0027;\n\n// Webアプリケーションのエントリーポイント\nfunction doGet() {\n  // ユーザーが認証されているか確認\n  const userEmail \u003d Session.getActiveUser().getEmail();\n  \n  // アクセス制御\n  if (!userEmail.endsWith(\u0027@g.kansai.soka.ed.jp\u0027) \u0026\u0026 !userEmail.endsWith(\u0027@soka.ed.jp\u0027)) {\n    return HtmlService.createHtmlOutput(\u0027アクセス権限がありません。\u0027);\n  }\n\n  // HTMLテンプレートを作成\n  const template \u003d HtmlService.createTemplateFromFile(\u0027Index\u0027);\n  \n  if (userEmail.endsWith(\u0027@g.kansai.soka.ed.jp\u0027)) {\n    // 保護者の場合\n    const studentId \u003d userEmail.match(/(\\d{6})/)[1];\n    const studentInfo \u003d getStudentInfo(studentId);\n    if (!studentInfo) {\n      return HtmlService.createHtmlOutput(\u0027児童情報が見つかりませんでした。\u0027);\n    }\n    template.isStaff \u003d false;\n    template.studentInfo \u003d studentInfo;\n  } else {\n    // 教職員の場合\n    template.isStaff \u003d true;\n    template.studentInfo \u003d null;\n  }\n  \n  return template.evaluate()\n    .setTitle(\u0027小学校担任連絡ページ\u0027)\n    .setFaviconUrl(\u0027https://www.google.com/favicon.ico\u0027);\n}\n\n// 学籍番号の検証関数（クライアントからの呼び出し用）\nfunction validateStudentId(studentId) {\n  console.log(\u0027validateStudentId が呼び出されました:\u0027, studentId);\n  \n  try {\n    // 学籍番号の基本的な検証\n    if (!studentId || !/^\\d{6}$/.test(studentId)) {\n      console.log(\u0027不正な学籍番号形式:\u0027, studentId);\n      return null;\n    }\n\n    // 児童情報の取得\n    const ss \u003d SpreadsheetApp.openById(SPREADSHEET_ID);\n    const sheet \u003d ss.getSheetByName(\u0027名簿(小学校)\u0027);\n    const data \u003d sheet.getDataRange().getValues();\n    \n    // ヘッダー行をスキップして児童を検索\n    for (let i \u003d 1; i \u003c data.length; i++) {\n      const rowStudentId \u003d String(data[i][0]).trim();\n      \n      if (rowStudentId \u003d\u003d\u003d String(studentId)) {\n        const studentInfo \u003d {\n          id: studentId,\n          department: data[i][1], // 部\n          grade: data[i][2],      // 学年\n          class: data[i][3],      // 学級\n          name: data[i][6]        // 氏名（漢字）\n        };\n        console.log(\u0027児童情報が見つかりました:\u0027, studentInfo);\n        return studentInfo;\n      }\n    }\n    \n    console.log(\u0027該当する児童が見つかりませんでした\u0027);\n    return null;\n\n  } catch (error) {\n    console.error(\u0027エラーが発生しました:\u0027, error);\n    return null;\n  }\n}\n\n// フォーム送信を処理する関数\nfunction submitForm(formData) {\n  console.log(\u0027submitForm が呼び出されました:\u0027, formData);\n  \n  try {\n    // 入力値の検証\n    if (!formData || !formData.studentId || !formData.date || !formData.message) {\n      return { success: false, message: \u0027必要な情報が不足しています。\u0027 };\n    }\n\n    // 児童情報を取得\n    const studentInfo \u003d getStudentInfo(formData.studentId);\n    if (!studentInfo) {\n      return { success: false, message: \u0027児童情報が見つかりませんでした。\u0027 };\n    }\n\n    // 担任情報を取得\n    const teacherInfo \u003d getTeacherInfo(studentInfo.grade, studentInfo.class);\n    if (!teacherInfo) {\n      return { \n        success: false, \n        message: `担任情報が見つかりませんでした。(学年: ${studentInfo.grade}, クラス: ${studentInfo.class})` \n      };\n    }\n\n    // メール送信\n    sendEmail(teacherInfo, studentInfo, formData);\n    \n    // ログに記録\n    recordSubmission(studentInfo, formData);\n    \n    return { success: true };\n\n  } catch (error) {\n    console.error(\u0027エラーが発生しました:\u0027, error);\n    return { \n      success: false, \n      message: `処理中にエラーが発生しました: ${error.toString()}` \n    };\n  }\n}\n\n// 児童情報を取得する関数（内部用）\nfunction getStudentInfo(studentId) {\n  if (!studentId) return null;\n\n  const ss \u003d SpreadsheetApp.openById(SPREADSHEET_ID);\n  const sheet \u003d ss.getSheetByName(\u0027名簿(小学校)\u0027);\n  const data \u003d sheet.getDataRange().getValues();\n  \n  // ヘッダー行をスキップして児童を検索\n  for (let i \u003d 1; i \u003c data.length; i++) {\n    const rowStudentId \u003d String(data[i][0]).trim();\n    if (rowStudentId \u003d\u003d\u003d String(studentId)) {\n      return {\n        id: studentId,\n        department: data[i][1], // 部\n        grade: data[i][2],      // 学年\n        class: data[i][3],      // 学級\n        name: data[i][6]        // 氏名（漢字）\n      };\n    }\n  }\n  return null;\n}\n\n// 担任情報を取得する関数\nfunction getTeacherInfo(grade, class_num) {\n  const ss \u003d SpreadsheetApp.openById(SPREADSHEET_ID);\n  const sheet \u003d ss.getSheetByName(\u0027配信マスタ(小学校)\u0027);\n  const data \u003d sheet.getDataRange().getValues();\n  \n  // ヘッダー行をスキップして担任情報を検索\n  for (let i \u003d 1; i \u003c data.length; i++) {\n    if (String(data[i][0]).trim() \u003d\u003d\u003d String(grade).trim() \u0026\u0026 \n        String(data[i][1]).trim() \u003d\u003d\u003d String(class_num).trim()) {\n      return {\n        name: data[i][2].trim(),\n        email: data[i][3].trim()\n      };\n    }\n  }\n  return null;\n}\n\n// メール送信関数\nfunction sendEmail(teacherInfo, studentInfo, formData) {\n  const subject \u003d `[${formData.date}]保護者からの連絡事項`;\n  const body \u003d `${teacherInfo.name}先生\n\n日付：${formData.date}\n担任への連絡事項：${formData.message}\n所属：${studentInfo.department}${studentInfo.grade}年${studentInfo.class}組\n氏名：${studentInfo.name}\n`;\n\n  GmailApp.sendEmail(\n    teacherInfo.email,\n    subject,\n    body\n  );\n}\n\n// ログに記録する関数\nfunction recordSubmission(studentInfo, formData) {\n  const ss \u003d SpreadsheetApp.openById(SPREADSHEET_ID);\n  const sheet \u003d ss.getSheetByName(\u0027ログ\u0027);\n  \n  const lastRow \u003d sheet.getLastRow();\n  const newNo \u003d lastRow \u003d\u003d\u003d 0 ? 1 : lastRow;\n  \n  sheet.appendRow([\n    newNo,              // No.\n    formData.date,      // 該当日\n    studentInfo.id,     // 学籍番号\n    studentInfo.department, // 部\n    studentInfo.grade,  // 学年\n    studentInfo.class,  // 学級\n    studentInfo.name,   // 氏名（漢字）\n    formData.message    // 担任への連絡事項\n  ]);\n}"},{"id":"0055ae01-ab03-437a-bdee-4c179d5da8f8","name":"Index","type":"html","source":"\u003c!-- Index.html --\u003e\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n  \u003cbase target\u003d\"_top\"\u003e\n  \u003cmeta charset\u003d\"UTF-8\"\u003e\n  \u003cmeta name\u003d\"viewport\" content\u003d\"width\u003ddevice-width, initial-scale\u003d1.0\"\u003e\n  \u003cstyle\u003e\n    body {\n      font-family: Arial, sans-serif;\n      max-width: 800px;\n      margin: 0 auto;\n      padding: 20px;\n    }\n    .form-group {\n      margin-bottom: 15px;\n    }\n    label {\n      display: block;\n      margin-bottom: 5px;\n      font-weight: bold;\n    }\n    input[type\u003d\"date\"], input[type\u003d\"text\"], textarea {\n      width: 100%;\n      padding: 8px;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      box-sizing: border-box;\n    }\n    textarea {\n      height: 150px;\n    }\n    button {\n      background-color: #4CAF50;\n      color: white;\n      padding: 10px 20px;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      margin-top: 10px;\n    }\n    button:hover {\n      background-color: #45a049;\n    }\n    .error {\n      color: red;\n      margin-top: 10px;\n    }\n    .success {\n      color: green;\n      margin-top: 10px;\n    }\n    #studentForm {\n      margin-bottom: 30px;\n      padding: 20px;\n      background-color: #f5f5f5;\n      border-radius: 4px;\n    }\n    .hidden {\n      display: none;\n    }\n    .loading {\n      color: #666;\n      margin-top: 10px;\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n  \u003c? if (isStaff) { ?\u003e\n    \u003c!-- 教職員用フォーム --\u003e\n    \u003ch1\u003e小学校担任連絡ページ（教職員用）\u003c/h1\u003e\n    \n    \u003cdiv id\u003d\"studentForm\"\u003e\n      \u003cdiv class\u003d\"form-group\"\u003e\n        \u003clabel for\u003d\"studentIdInput\"\u003e学籍番号（6桁）:\u003c/label\u003e\n        \u003cdiv style\u003d\"display: flex; gap: 10px;\"\u003e\n          \u003cinput type\u003d\"text\" id\u003d\"studentIdInput\" pattern\u003d\"\\d{6}\" maxlength\u003d\"6\" required \n                 style\u003d\"width: 200px;\" placeholder\u003d\"例: 123456\"\u003e\n          \u003cbutton onclick\u003d\"validateStudentId()\"\u003e児童情報を確認\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n      \u003cdiv id\u003d\"studentInfo\" class\u003d\"hidden\"\u003e\n        \u003cp\u003e児童情報: \u003cspan id\u003d\"studentInfoDisplay\"\u003e\u003c/span\u003e\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  \u003c? } else { ?\u003e\n    \u003c!-- 保護者用フォーム --\u003e\n    \u003ch1\u003e\u003c?\u003d studentInfo.department ?\u003e\u003c?\u003d studentInfo.grade ?\u003e年\u003c?\u003d studentInfo.class ?\u003e組 \u003c?\u003d studentInfo.name ?\u003eさんの担任連絡ページ\u003c/h1\u003e\n  \u003c? } ?\u003e\n  \n  \u003cform id\u003d\"contactForm\" class\u003d\"\u003c?\u003d isStaff ? \u0027hidden\u0027 : \u0027\u0027 ?\u003e\"\u003e\n    \u003cinput type\u003d\"hidden\" id\u003d\"studentId\" name\u003d\"studentId\" value\u003d\"\u003c?\u003d isStaff ? \u0027\u0027 : studentInfo.id ?\u003e\"\u003e\n    \n    \u003cdiv class\u003d\"form-group\"\u003e\n      \u003clabel for\u003d\"date\"\u003e該当日:\u003c/label\u003e\n      \u003cinput type\u003d\"date\" id\u003d\"date\" name\u003d\"date\" required\u003e\n    \u003c/div\u003e\n    \n    \u003cdiv class\u003d\"form-group\"\u003e\n      \u003clabel for\u003d\"message\"\u003e担任への連絡事項:\u003c/label\u003e\n      \u003ctextarea id\u003d\"message\" name\u003d\"message\" required \n                placeholder\u003d\"担任への連絡事項を入力してください\"\u003e\u003c/textarea\u003e\n    \u003c/div\u003e\n    \n    \u003cbutton type\u003d\"button\" onclick\u003d\"submitForm()\"\u003e送信\u003c/button\u003e\n  \u003c/form\u003e\n  \n  \u003cdiv id\u003d\"result\"\u003e\u003c/div\u003e\n\n  \u003cscript\u003e\n    // 学籍番号の検証\n    function validateStudentId() {\n      const studentIdInput \u003d document.getElementById(\u0027studentIdInput\u0027);\n      const studentInfo \u003d document.getElementById(\u0027studentInfo\u0027);\n      const contactForm \u003d document.getElementById(\u0027contactForm\u0027);\n      const studentInfoDisplay \u003d document.getElementById(\u0027studentInfoDisplay\u0027);\n      const studentIdHidden \u003d document.getElementById(\u0027studentId\u0027);\n      const resultDiv \u003d document.getElementById(\u0027result\u0027);\n      \n      resultDiv.innerHTML \u003d \u0027\u003cp class\u003d\"loading\"\u003e確認中...\u003c/p\u003e\u0027;\n      \n      // 入力値の基本的な検証\n      if (!/^\\d{6}$/.test(studentIdInput.value)) {\n        resultDiv.innerHTML \u003d \u0027\u003cp class\u003d\"error\"\u003e学籍番号は6桁の数字で入力してください。\u003c/p\u003e\u0027;\n        return;\n      }\n\n      // サーバーサイドでの検証\n      google.script.run\n        .withSuccessHandler(function(result) {\n          console.log(\u0027検証結果:\u0027, result);\n          if (result) {\n            studentInfo.classList.remove(\u0027hidden\u0027);\n            contactForm.classList.remove(\u0027hidden\u0027);\n            studentInfoDisplay.textContent \u003d \n              `${result.department}${result.grade}年${result.class}組 ${result.name}`;\n            studentIdHidden.value \u003d result.id;\n            resultDiv.innerHTML \u003d \u0027\u003cp class\u003d\"success\"\u003e児童情報を確認しました。\u003c/p\u003e\u0027;\n          } else {\n            studentInfo.classList.add(\u0027hidden\u0027);\n            contactForm.classList.add(\u0027hidden\u0027);\n            resultDiv.innerHTML \u003d \u0027\u003cp class\u003d\"error\"\u003e指定された学籍番号の児童情報が見つかりませんでした。\u003c/p\u003e\u0027;\n          }\n        })\n        .withFailureHandler(function(error) {\n          console.error(\u0027エラー:\u0027, error);\n          resultDiv.innerHTML \u003d \u0027\u003cp class\u003d\"error\"\u003eエラーが発生しました: \u0027 + error.message + \u0027\u003c/p\u003e\u0027;\n        })\n        .validateStudentId(studentIdInput.value);\n    }\n\n    // フォームの送信\n    function submitForm() {\n      const resultDiv \u003d document.getElementById(\u0027result\u0027);\n      const studentId \u003d document.getElementById(\u0027studentId\u0027).value;\n      const date \u003d document.getElementById(\u0027date\u0027).value;\n      const message \u003d document.getElementById(\u0027message\u0027).value;\n\n      // 入力値の検証\n      if (!studentId || !date || !message) {\n        resultDiv.innerHTML \u003d \u0027\u003cp class\u003d\"error\"\u003eすべての項目を入力してください。\u003c/p\u003e\u0027;\n        return;\n      }\n\n      // 送信中の表示\n      resultDiv.innerHTML \u003d \u0027\u003cp class\u003d\"loading\"\u003e送信中...\u003c/p\u003e\u0027;\n\n      // サーバーへの送信\n      google.script.run\n        .withSuccessHandler(function(result) {\n          if (result.success) {\n            resultDiv.innerHTML \u003d \u0027\u003cp class\u003d\"success\"\u003e送信が完了しました。\u003c/p\u003e\u0027;\n            // フォームのリセット\n            document.getElementById(\u0027date\u0027).value \u003d \u0027\u0027;\n            document.getElementById(\u0027message\u0027).value \u003d \u0027\u0027;\n            if (document.getElementById(\u0027studentIdInput\u0027)) {\n              document.getElementById(\u0027studentIdInput\u0027).value \u003d \u0027\u0027;\n              document.getElementById(\u0027studentInfo\u0027).classList.add(\u0027hidden\u0027);\n              document.getElementById(\u0027contactForm\u0027).classList.add(\u0027hidden\u0027);\n            }\n          } else {\n            resultDiv.innerHTML \u003d \u0027\u003cp class\u003d\"error\"\u003eエラーが発生しました: \u0027 + \n              (result.message || \u0027送信に失敗しました\u0027) + \u0027\u003c/p\u003e\u0027;\n          }\n        })\n        .withFailureHandler(function(error) {\n          resultDiv.innerHTML \u003d \u0027\u003cp class\u003d\"error\"\u003eエラーが発生しました: \u0027 + error.message + \u0027\u003c/p\u003e\u0027;\n        })\n        .submitForm({\n          studentId: studentId,\n          date: date,\n          message: message\n        });\n    }\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e"}]}